econ_start = {
	set_variable = { GDP = 0 }
	econ_vars = yes
	econ_modifiers = yes
	set_variable = { GDP_calc_num = 0 }
	set_variable = { civ_factory_count = num_of_civilian_factories }
	multiply_variable = { var = civ_factory_count value = 2 }
	set_variable = { taxation_amount = taxable_population }
	divide_variable = { var = taxation_amount value = 75 }
	add_to_variable = { var = GDP_calc_num value = civ_factory_count }
	add_to_variable = { var = GDP_calc_num value = taxation_amount }
	add_to_variable = { var = GDP value = GDP_calc_num }
	clear_variable = GDP_calc_num
	clear_variable = civ_factory_count
}

econ_modifiers = {
	#GDP Increase
	set_variable = { GDP_increase_national = 1 }
	set_variable = { GDP_increase_temp = 1 }
	add_to_variable = { GDP_increase_temp = modifier@gdp_increase }
	subtract_from_variable = { GDP_increase_temp = modifier@gdp_decrease }
	multiply_variable = { GDP_increase_national = GDP_increase_temp }
	multiply_variable = { var = income value = GDP_increase_national }
	clear_variable = GDP_increase_temp
	
	#GDP Spending Increase
	set_variable = { GDP_spending_national = 1 }
	set_variable = { GDP_spending_temp = 1 }
	add_to_variable = { GDP_spending_temp = modifier@gdp_spending }
	multiply_variable = { GDP_spending_national = GDP_spending_temp }
	multiply_variable = { var = generalexpenses value = GDP_spending_national }
	clear_variable = GDP_spending_temp
	
	#GDP Spending Decrease
	set_variable = { GDP_austerity_national = 1 }
	set_variable = { GDP_austerity_temp = 1 }
	add_to_variable = { GDP_austerity_temp = modifier@gdp_austerity }
	multiply_variable = { GDP_austerity_national = GDP_austerity_temp }
	divide_variable = { var = generalexpenses value = GDP_austerity_temp }
	clear_variable = GDP_austerity_temp
	
	#GDP Paying Loan
	set_variable = { GDP_loan_national = 1 }
	set_variable = { GDP_loan_temp = 1 }
	add_to_variable = { GDP_loan_temp = modifier@gdp_paying_loan }
	multiply_variable = { GDP_loan_national = GDP_loan_temp }
	multiply_variable = { var = DBP value = GDP_loan_national }
	clear_variable = GDP_loan_temp
	
	#GDP Defaulting
	#set_temp_variable = { GDP_default_national = 1 }
	#divide_temp_variable = { GDP_default_national = 12 }
	#add_to_temp_variable = { GDP_default_national = modifier@gdp_default_loan }
}

econ_vars = {
	set_variable = { income = 0 }
	set_variable = { generalexpenses = 0}

	###Earnings
	#Civilian Factories
	set_variable = { cfff = num_of_civilian_factories}
	divide_variable = { var = cfff value = 15 }
	set_variable = { cfff_multiplier = 1 }
	add_to_variable = { cfff_multiplier = modifier@income_from_civilian_factories }
	subtract_from_variable = { cfff_multiplier = modifier@cost_from_civilian_factories }
	multiply_variable = { cfff = cfff_multiplier }
	#Taxable Population
	set_variable = { tax = taxable_population }
	divide_variable = { tax = 5000 }
	set_variable = { taxable_population_multiplier = 1 }
	add_to_variable = { taxable_population_multiplier = modifier@income_from_taxable_population }
	subtract_from_variable = { taxable_population_multiplier = modifier@cost_from_taxable_population }
	multiply_variable = { tax = taxable_population_multiplier }
	#Export of Chromium
	set_variable = { chromium_export = resource_exported@chromium}
	divide_variable = { var = chromium_export value = 55 }
	set_variable = { chromium_export_multiplier = 1 }
	add_to_variable = { chromium_export_multiplier = modifier@income_from_chromium_export }
	subtract_from_variable = { chromium_export_multiplier = modifier@cost_from_chromium_export }
	multiply_variable = { chromium_export = chromium_export_multiplier }
	#Export of Tungsten
	set_variable = { tungsten_export = resource_exported@tungsten}
	divide_variable = { var = tungsten_export value = 60 }
	set_variable = { tungsten_export_multiplier = 1 }
	add_to_variable = { tungsten_export_multiplier = modifier@income_from_tungsten_export }
	subtract_from_variable = { tungsten_export_multiplier = modifier@cost_from_tungsten_export }
	multiply_variable = { tungsten_export = tungsten_export_multiplier }
	#Export of Rubber
	set_variable = { rubber_export = resource_exported@rubber}
	divide_variable = { var = rubber_export value = 60 }
	set_variable = { rubber_export_multiplier = 1 }
	add_to_variable = { rubber_export_multiplier = modifier@income_from_rubber_export }
	subtract_from_variable = { rubber_export_multiplier = modifier@cost_from_rubber_export }
	multiply_variable = { rubber_export = rubber_export_multiplier }
	#Export of Aluminium
	set_variable = { aluminum_export = resource_exported@aluminium}
	divide_variable = { var = aluminum_export value = 80 }
	set_variable = { aluminum_export_multiplier = 1 }
	add_to_variable = { aluminum_export_multiplier = modifier@income_from_aluminum_export }
	subtract_from_variable = { aluminum_export_multiplier = modifier@cost_from_aluminum_export }
	multiply_variable = { aluminum_export = aluminum_export_multiplier }
	#Export of Oil
	set_variable = { oil_export = resource_exported@oil}
	divide_variable = { var = oil_export value = 40 }
	set_variable = { oil_export_multiplier = 1 }
	add_to_variable = { oil_export_multiplier = modifier@income_from_oil_export }
	subtract_from_variable = { oil_export_multiplier = modifier@cost_from_oil_export }
	multiply_variable = { oil_export = oil_export_multiplier }
	#Export of Steel
	set_variable = { steel_export = resource_exported@steel}
	divide_variable = { var = steel_export value = 90 }
	set_variable = { steel_export_multiplier = 1 }
	add_to_variable = { steel_export_multiplier = modifier@income_from_steel_export }
	subtract_from_variable = { steel_export_multiplier = modifier@cost_from_steel_export }
	multiply_variable = { steel_export = steel_export_multiplier }
	#GDP Add To Eco
	set_variable = { GDP_money_gain_national = modifier@gdp_money_gain }
	#Adding Gold to the GDP
	add_to_variable = { GDP_money_gain_national = total_gdp_gain_from_gold }
	#GDP Spending From Eco
	set_variable = { GDP_money_spent_national = modifier@gdp_money_spent }

	set_variable = { all_exports = chromium_export }
	add_to_variable = { all_exports = tungsten_export }
	add_to_variable = { all_exports = rubber_export }
	add_to_variable = { all_exports = aluminum_export }
	add_to_variable = { all_exports = oil_export }
	add_to_variable = { all_exports = steel_export }
	set_variable = { all_exports_multiplier = 1 }
	add_to_variable = { all_exports_multiplier = modifier@efficiency_of_all_exports }
	subtract_from_variable = { all_exports_multiplier = modifier@cost_from_all_exports }
	multiply_variable = { all_exports = all_exports_multiplier }

	
	###Expenses
	#State Upkeep
	set_variable = { nc = state_costs_cored }
	divide_variable = { var = nc value = 200 }
	set_variable = { nc_multiplier = 1 }
	add_to_variable = { nc_multiplier = modifier@cost_from_state_upkeep }
	subtract_from_variable = { nc_multiplier = modifier@efficiency_of_state_upkeep }
	multiply_variable = { nc = nc_multiplier }
	#Occupation Cost
	set_variable = { no = state_costs }
	divide_variable = { no = 150 }
	set_variable = { no_multiplier = 1 }
	add_to_variable = { no_multiplier = modifier@cost_from_occupied_states }
	subtract_from_variable = { no_multiplier = modifier@efficiency_of_occupied_states }
	multiply_variable = { no = no_multiplier }
	#Military Factory Upkeep
	set_variable = { nf = num_of_military_factories}
	divide_variable = { var = nf value = 100 }
	set_variable = { nf_multiplier = 1 }
	add_to_variable = { nf_multiplier = modifier@cost_from_military_factories }
	subtract_from_variable = { nf_multiplier = modifier@efficiency_of_military_factories }
	multiply_variable = { nf = nf_multiplier }
	#Dockyard Upkeep
	set_variable = { navf = num_of_naval_factories}
	divide_variable = { var = navf value = 50 }
	set_variable = { navf_multiplier = 1 }
	add_to_variable = { navf_multiplier = modifier@cost_from_dockyards }
	subtract_from_variable = { navf_multiplier = modifier@efficiency_of_dockyards }
	multiply_variable = { navf = navf_multiplier }
	##Military Spending
	#Army Spending
	set_variable = { army_spending = num_battalions }
	divide_variable = { var = army_spending value = 150 }
	set_variable = { army_spending_multiplier = 1 }
	add_to_variable = { army_spending_multiplier = modifier@cost_from_army_spending }
	subtract_from_variable = { army_spending_multiplier = modifier@efficiency_of_army_spending }
	multiply_variable = { army_spending = army_spending_multiplier }
	#Air Force Spending
	set_variable = { air_spending = num_deployed_planes }
	divide_variable = { var = air_spending value = 1250 }
	set_variable = { air_spending_multiplier = 1 }
	add_to_variable = { air_spending_multiplier = modifier@cost_from_air_spending }
	subtract_from_variable = { air_spending_multiplier = modifier@efficiency_of_air_spending }
	multiply_variable = { air_spending = air_spending_multiplier }
	#Naval Spending
	calculate_naval_spending = yes
	set_variable = { naval_spending = naval_expense_value }
	divide_variable = { var = naval_spending value = 30 }
	set_variable = { naval_spending_multiplier = 1 }
	add_to_variable = { naval_spending_multiplier = modifier@cost_from_naval_spending }
	subtract_from_variable = { naval_spending_multiplier = modifier@efficiency_of_naval_spending }
	multiply_variable = { naval_spending = naval_spending_multiplier }
	#All Military Spending
	set_variable = { ms = army_spending }
	add_to_variable = { ms = air_spending }
	add_to_variable = { ms = naval_spending }
	set_variable = { ms_multiplier = 1 }
	add_to_variable = { ms_multiplier = modifier@cost_from_military_spending }
	subtract_from_variable = { ms_multiplier = modifier@efficiency_of_military_spending }
	multiply_variable = { ms = ms_multiplier }
	#Chromium Import
	set_variable = { chromium_import = resource_imported@chromium}
	divide_variable = { var = chromium_import value = 45 }
	set_variable = { chromium_import_multiplier = 1 }
	add_to_variable = { chromium_import_multiplier = modifier@cost_from_chromium_imports }
	subtract_from_variable = { chromium_import_multiplier = modifier@efficiency_of_chromium_imports }
	multiply_variable = { chromium_import = chromium_import_multiplier }
	#Tungsten Import
	set_variable = { tungsten_import = resource_imported@tungsten}
	divide_variable = { var = tungsten_import value = 50 }
	set_variable = { tungsten_import_multiplier = 1 }
	add_to_variable = { tungsten_import_multiplier = modifier@cost_from_tungsten_imports }
	subtract_from_variable = { tungsten_import_multiplier = modifier@efficiency_of_tungsten_imports }
	multiply_variable = { tungsten_import = tungsten_import_multiplier }
	#Rubber Import
	set_variable = { rubber_import = resource_imported@rubber}
	divide_variable = { var = rubber_import value = 50 }
	set_variable = { rubber_import_multiplier = 1 }
	add_to_variable = { rubber_import_multiplier = modifier@cost_from_rubber_imports }
	subtract_from_variable = { rubber_import_multiplier = modifier@efficiency_of_rubber_imports }
	multiply_variable = { rubber_import = rubber_import_multiplier }
	#Aluminium Import
	set_variable = { aluminum_import = resource_imported@aluminium}
	divide_variable = { var = aluminum_import value = 70 }
	set_variable = { aluminum_import_multiplier = 1 }
	add_to_variable = { aluminum_import_multiplier = modifier@cost_from_aluminum_imports }
	subtract_from_variable = { aluminum_import_multiplier = modifier@efficiency_of_aluminum_imports }
	multiply_variable = { aluminum_import = aluminum_import_multiplier }
	#Oil Import
	set_variable = { oil_import = resource_imported@oil}
	divide_variable = { var = oil_import value = 30 }
	set_variable = { oil_import_multiplier = 1 }
	add_to_variable = { oil_import_multiplier = modifier@cost_from_oil_imports }
	subtract_from_variable = { oil_import_multiplier = modifier@efficiency_of_oil_imports }
	multiply_variable = { oil_import = oil_import_multiplier }
	#Steel Import
	set_variable = { steel_import = resource_imported@steel}
	divide_variable = { var = steel_import value = 80 }
	set_variable = { steel_import_multiplier = 1 }
	add_to_variable = { steel_import_multiplier = modifier@cost_from_steel_imports }
	subtract_from_variable = { steel_import_multiplier = modifier@efficiency_of_steel_imports }
	multiply_variable = { steel_import = steel_import_multiplier }
	#All Imports!
	set_variable = { all_imports = chromium_import }
	add_to_variable = { all_imports = tungsten_import }
	add_to_variable = { all_imports = rubber_import }
	add_to_variable = { all_imports = aluminum_import }
	add_to_variable = { all_imports = oil_import }
	add_to_variable = { all_imports = steel_import }
	set_variable = { all_imports_multiplier = 1 }
	add_to_variable = { all_imports_multiplier = modifier@cost_from_all_imports }
	subtract_from_variable = { all_imports_multiplier = modifier@efficiency_of_all_imports }
	multiply_variable = { all_imports = all_imports_multiplier }
	
	###Debt Expense
	#set_variable = { DBP = 1 }
	
	add_to_variable = { var = income value = tax }
	add_to_variable = { var = income value = cfff }
	add_to_variable = { var = income value = all_exports }
	add_to_variable = { var = income value = GDP_money_gain_national }

	### TRANSFER GROWTH TO MASTER
	# To have subjects give $ to their overlord, access an autonomy file and put "autonomous_states = NUM (between 0-1) in the modifiers branch."
	if = {
		limit = {
			is_subject = yes
		}
		set_variable = { subject_income_transfer = modifier@subject_income_to_overlord }
		OVERLORD = {
			add_to_variable = { PREV.subject_income_transfer = modifier@overlord_income_from_subjects }
		}
		clamp_variable = {
			var = subject_income_transfer
			min = 0
			max = 1
		}
		set_variable = { tax_to_overlord = income }
		multiply_variable = { tax_to_overlord = subject_income_transfer }
		OVERLORD = {
			add_to_variable = { income_from_subjects = PREV.tax_to_overlord }
		}
	}

	add_to_variable = { income = income_from_subjects }

	add_to_variable = { var = generalexpenses value = all_imports }	
	add_to_variable = { var = generalexpenses value = no }	
	add_to_variable = { var = generalexpenses value = GDP_money_spent_national }
	add_to_variable = { var = generalexpenses value = tax_to_overlord }
	add_to_variable = { var = generalexpenses value = depression }
	add_to_variable = { var = generalexpenses value = nc }
	add_to_variable = { var = generalexpenses value = ms }
	add_to_variable = { var = generalexpenses value = nf }
	add_to_variable = { var = generalexpenses value = navf }	
}

eco_exchanges = {
	add_to_variable = { var = GDP value = income }
	subtract_from_variable = { var = GDP value = generalexpenses }
	subtract_from_variable = { var = GDP value = DBP }
}

calculate_social_ideas = {
	###Ideas
	every_country={
		limit={
			has_idea = GDP_economic_aid_distribution_small
		}
		set_variable = { nerfeco = 0.01}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_aid_distribution_medium
		}
		set_variable = { nerfeco = 0.03}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_aid_distribution_large
		}
		set_variable = { nerfeco = 0.05}
	}

	every_country={
		limit={
			has_idea = GDP_economic_aid_reception_small
		}
		set_variable = { GDP = 0.01}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_aid_reception_medium
		}
		set_variable = { GDP = 0.03}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_aid_reception_large
		}
		set_variable = { GDP = 0.05}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_loansharking_small
		}
		set_variable = { GDP = 0.04}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_loansharking_medium
		}
		set_variable = { GDP = 0.06}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_loansharking_large
		}
		set_variable = { GDP = 0.09}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_exploitation_small
		}
		set_variable = { tax_to_overlord = 0.5}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_exploitation_medium
		}
		set_variable = { tax_to_overlord = 0.7}
	}
		
	every_country={
		limit={
			has_idea = GDP_economic_exploitation_large
		}
		set_variable = { tax_to_overlord = 1}
	}
		
	every_country={
		limit={
			has_idea = GDP_minor_recession
		}
		set_variable = { nerfeco = 2 }
	}

	every_country={
		limit={
			has_idea = GDP_recession
		}
		set_variable = { nerfeco = 4 }
	}
		
	every_country={
		limit={
			has_idea = GDP_major_recession
		}
		set_variable = { nerfeco = 6 }
	}
		
	every_country={
		limit={
			has_idea = GDP_depression
		}
		set_variable = { depression = 9 }
	}
}

initiate_state_gold = {
	if = {
		limit = {
			NOT = {
				has_variable = THIS.state_gold_modifier
			}
		}
		add_dynamic_modifier = { modifier = gold_flat }
	}
}

calculate_state_upkeeps_noncore = {
	set_variable = { state_costs = 0 }
	every_controlled_state = {
		if = {
			limit = {
				AND = {
					has_state_category = wasteland
					impassable = no
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 8 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = tiny_island
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 1 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = enclave
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 1 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = enclave
					NOT = { is_in_home_area = yes }
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 10 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = pastoral
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 3 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = rural
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 6 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = town
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 10 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = large_town
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 20 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = city
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 40 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = large_city
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 60 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = metropolis
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 80 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = megalopolis
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 120 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = arcoplex
					NOT = {
						is_core_of = PREV
					}
				}
			}
			add_to_variable = { PREV.state_costs = 180 }
		}
	}
}

calculate_state_upkeeps_core = {
	set_variable = { state_costs_cored = 0 }
	every_controlled_state = {
		if = {
			limit = {
				AND = {
					has_state_category = wasteland
					impassable = no
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 8 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = tiny_island
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 1 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = enclave
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 1 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = enclave
					NOT = { is_in_home_area = yes }
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 10 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = pastoral
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 3 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = rural
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 6 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = town
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 10 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = large_town
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 20 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = city
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 40 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = large_city
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 60 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = metropolis
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 80 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = megalopolis
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 120 }
		}
		if = {
			limit = {
				AND = {
					has_state_category = arcoplex
					is_core_of = PREV
				}
			}
			add_to_variable = { PREV.state_costs_cored = 180 }
		}
	}
}

set_taxable_population = {
	set_variable = { taxable_population = 0 }
	every_controlled_state = {
		#if = {
		#	limit = {
		#		is_core_of = PREV
		#	}
		#	set_variable = { state_pop_temp = var:state_population_k@THIS }
		#	divide_variable = { state_pop_temp = 10 }
		#	add_to_variable = { PREV.taxable_population = state_pop_temp }
		#}
		if = {
			limit = {
				AND = {
					has_state_category = wasteland
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 0.5 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = tiny_island
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 0.3 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = enclave
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 0.3 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = pastoral
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 1 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = rural
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 2 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = town
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 4 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = large_town
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 6 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = city
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 8 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = large_city
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 10 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = metropolis
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 12 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = megalopolis
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 14 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
		if = {
			limit = {
				AND = {
					has_state_category = arcoplex
				}
			}
			set_temp_variable = { state_pop_temp = var:state_population_k@THIS }
			multiply_temp_variable = { state_pop_temp = 18 }
			divide_temp_variable = { state_pop_temp = 66 }
			if = {
				limit = {
					NOT = {
						is_core_of = PREV
					}
				}
				divide_temp_variable = { state_pop_temp = 5 }
				set_temp_variable = { state_pop_temp_multiplier = 1 }
				add_to_temp_variable = { state_pop_temp_multiplier = PREV.modifier@income_from_non_core_states }
				subtract_from_temp_variable = { state_pop_temp_multiplier = PREV.modifier@cost_of_non_core_states }
				multiply_temp_variable = { state_pop_temp = state_pop_temp_multiplier }
			}
			add_to_variable = { PREV.taxable_population = state_pop_temp }
		}
	}
}

set_econ_new_country = {
	calculate_income_from_modifiers = yes
	### Setting up the taxable population on start.
	set_taxable_population = yes
	### Setting up the occupation costs
	set_variable = { no = 0 }
	calculate_state_upkeeps_noncore = yes
	calculate_state_upkeeps_core = yes

	econ_start = yes
	eco_exchanges = yes
}

calculate_income_from_modifiers = {
	subtract_from_variable = { GDP_money_gain_national = total_gdp_gain_from_gold }
	set_variable = { total_gdp_gain_from_gold = 0 }
	every_controlled_state = {
		if = {
			limit = {
				has_dynamic_modifier = { modifier = gold_flat }
			}
			add_to_variable = { PREV.total_gdp_gain_from_gold = 0.5 }
		}
	}
}

calculate_naval_spending = {
	# Starting Var
	set_variable = { naval_expense_value = 0 }
	# Submarines
	set_temp_variable = { naval_expense_submarines = var:num_ships_with_type@submarine }
	divide_temp_variable = { naval_expense_submarines = 2 }
	add_to_variable = { naval_expense_value = naval_expense_submarines }
	# Destroyers
	set_temp_variable = { naval_expense_destoryers = var:num_ships_with_type@destroyer }
	#divide_temp_variable = { naval_expense_destoryers = 2 } None needed here!
	add_to_variable = { naval_expense_value = naval_expense_destoryers }
	# Light Cruisers
	set_temp_variable = { naval_expense_light_cruisers = var:num_ships_with_type@light_cruiser }
	multiply_temp_variable = { naval_expense_light_cruisers = 2 }
	add_to_variable = { naval_expense_value = naval_expense_light_cruisers }
	# Heavy Cruisers
	set_temp_variable = { naval_expense_heavy_cruisers = var:num_ships_with_type@heavy_cruiser }
	multiply_temp_variable = { naval_expense_heavy_cruisers = 4 }
	add_to_variable = { naval_expense_value = naval_expense_heavy_cruisers }
	# Battleships
	set_temp_variable = { naval_expense_battleships = var:num_ships_with_type@battleship }
	multiply_temp_variable = { naval_expense_battleships = 8 }
	add_to_variable = { naval_expense_value = naval_expense_battleships }
	# Carriers
	set_temp_variable = { naval_expense_carriers = var:num_ships_with_type@carrier }
	multiply_temp_variable = { naval_expense_carriers = 8 }
	add_to_variable = { naval_expense_value = naval_expense_carriers }
}